name: CI

on:
  push:
    paths-ignore:
      - 'LICENSE.md'
      - 'README.md'
    branches:
      - master
  pull_request:
    branches:
      - master
    tags: '*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    strategy:
      fail-fast: false
      matrix:
        julia-version: ['1.3', '1.6']
        julia-arch: [x64]
        os: [ubuntu-latest]
    env:
      JULIA_PKG_SERVER: ''
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - name: Install dependencies
        run: |
          julia --project --color=yes -e 'using Pkg;
              include("deps/build_private.jl");
              Pkg.build(verbose=true)'
      - name: Build
        run: |
          julia --project --color=yes --check-bounds=yes -e 'using Pkg;
              Pkg.test(coverage=true);
              Pkg.add("Coverage");
              using Coverage;
              Codecov.submit(process_folder())'
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
        continue-on-error: ${{ matrix.julia-version == 'nightly' }}
      - uses: julia-actions/julia-runtest@v1
        continue-on-error: ${{ matrix.julia-version == 'nightly' }}
